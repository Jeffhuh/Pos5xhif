@page "/persons"
@using BlazorCrud.Model
@inject PersonDatabaseContext Db
<!-- Grauen Hintergrund in Visual Studio deaktivieren:
    Tools -> Options ->Environment -> Fonts and Colors -> HTML Razor Code Background -->

<p>Person count: @count</p>
@if (count > 0)
{
    <table>
        <tr><th>Firstname</th><th>Lastname</th></tr>
        @foreach (Person p in Db.Person)
        {
            <tr>
                <td>@p.P_Firstname</td>
                <td>@p.P_Lastname</td>
                <td><button class="btn btn-success btn-sm" @onclick="@(()=>EditPerson(p.P_ID))">Edit</button></td>
                <td><button class="btn btn-danger btn-sm" @onclick="@(()=>DeletePerson(p.P_ID))">Delete</button></td>
            </tr>
        }
    </table>
}

<EditForm Model="@person" OnValidSubmit="AddOrEditPerson">
    <table>
        <tr>
            <td><InputText placeholder="First Name" @bind-Value="@person.P_Firstname" /></td>
            <td><InputText placeholder="Last Name" @bind-Value="@person.P_Lastname" /></td>
            <td><button type="submit" class="btn btn-primary">Save Person</button></td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td colspan="4">
                <DataAnnotationsValidator />
                <ValidationSummary />
            </td>
        </tr>
    </table>
</EditForm>


@code {
    private int count => Db.Person.Count();
    private Person person { get; set; } = new Person();
    //protected override async Task OnInitializedAsync()
    //{
    //}

    private async Task AddOrEditPerson()
    {
        if (Db.Entry(person).State == Microsoft.EntityFrameworkCore.EntityState.Detached)
            Db.Entry(person).State = Microsoft.EntityFrameworkCore.EntityState.Added;
        else
            Db.Entry(person).State = Microsoft.EntityFrameworkCore.EntityState.Modified;

        await Db.SaveChangesAsync();
        person = new Person();
    }

    private void EditPerson(long personId)
    {
        person = Db.Person.Find(personId);
    }

    private async Task DeletePerson(long personId)
    {
        Person p = Db.Person.Find(personId);
        Db.Entry(p).State = Microsoft.EntityFrameworkCore.EntityState.Deleted;
        await Db.SaveChangesAsync();
    }
}
